version: '3.8'

services:
  # ======================================================
  # MongoDB (base de datos principal)
  # ======================================================
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    restart: always
    ports:
      - "${MONGO_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    networks:
      - microservices-network

  # ======================================================
  # Servicio de Autenticación (Auth)
  # ======================================================
  auth-service:
    build: ./services/auth-service
    container_name: auth-service
    restart: always
    ports:
      - "${AUTH_PORT}:3000"
    env_file:
      - .env
    depends_on:
      - mongodb
    networks:
      - microservices-network
    volumes:
      - ./services/auth-service:/app

  # ======================================================
  # Servicio de Productos
  # ======================================================
  products-service:
    build: ./services/products-service
    container_name: products-service
    restart: always
    ports:
      - "${PRODUCTS_PORT}:3001"
    env_file:
      - .env
    depends_on:
      - mongodb
      - auth-service
    networks:
      - microservices-network
    volumes:
      - ./services/products-service:/app

  # ======================================================
  # Servicio de Inventario
  # ======================================================
  inventory-service:
    build: ./services/inventory-service
    container_name: inventory-service
    restart: always
    ports:
      - "${INVENTORY_PORT}:3002"
    env_file:
      - .env
    depends_on:
      - mongodb
      - auth-service
    networks:
      - microservices-network
    volumes:
      - ./services/inventory-service:/app

  # ======================================================
  # Servicio de Órdenes
  # ======================================================
  orders-service:
    build: ./services/orders-service
    container_name: orders-service
    restart: always
    ports:
      - "${ORDERS_PORT}:3003"
    env_file:
      - .env
    depends_on:
      - mongodb
      - auth-service
    networks:
      - microservices-network
    volumes:
      - ./services/orders-service:/app

  # ======================================================
  # Servicio de Facturación
  # ======================================================
  billing-service:
    build: ./services/billing-service
    container_name: billing-service
    restart: always
    ports:
      - "${BILLING_PORT}:3004"
    env_file:
      - .env
    depends_on:
      - mongodb
      - auth-service
    networks:
      - microservices-network
    volumes:
      - ./services/billing-service:/app

  # ======================================================
  # Servicio de Reportes
  # ======================================================
  reports-service:
    build: ./services/reports-service
    container_name: reports-service
    restart: always
    ports:
      - "${REPORTS_PORT}:3005"
    env_file:
      - .env
    depends_on:
      - mongodb
      - auth-service
    networks:
      - microservices-network
    volumes:
      - ./services/reports-service:/app

  # ======================================================
  # API Gateway (Nginx)
  # ======================================================
  api-gateway:
    image: nginx:alpine
    container_name: api-gateway
    restart: always
    ports:
      - "${GATEWAY_PORT}:80"
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth-service
      - products-service
      - inventory-service
      - orders-service
      - billing-service
      - reports-service
    networks:
      - microservices-network

  # ======================================================
  # Frontend (unificado)
  # ======================================================
  frontend:
    build: ./frontend
    container_name: frontend
    restart: always
    ports:
      - "${FRONTEND_PORT}:80"
    env_file:
      - .env
    depends_on:
      - api-gateway
    networks:
      - microservices-network
    volumes:
      - ./frontend:/app

  # ======================================================
  # Mongo Express (panel web de MongoDB)
  # ======================================================
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    ports:
      - "${MONGO_EXPRESS_PORT}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASS}
    depends_on:
      - mongodb
    networks:
      - microservices-network

# ======================================================
# Redes y volúmenes
# ======================================================
networks:
  microservices-network:
    driver: bridge

volumes:
  mongodb_data:
